#include "messageservice.fcl"
#include "services_dune.fcl"
#include "config_stopping_mu_filter_producerlabels.fcl"
#include "config_stopping_mu_filter_cutvalues.fcl"
#include "config_stopping_mu_filter_fiducialvolume.fcl"
#include "config_tension_analysis_producerlabels.fcl"
#include "config_tension_analysis_cutvalues.fcl"
#include "ProtoDUNEFembFilter.fcl"
#include "missingproductfilter.fcl"
#include "ProtoDUNECalibration.fcl"

process_name: tensionana

services:
{
  TFileService: {fileName: "tensionana.root"}
  message:               @local::standard_info
  PdspChannelMapService: @local::pdspchannelmap
                         @table::protodune_services

} # services

source:
{
  module_type: RootInput
  inputCommands: [ "keep *_*_*_*" ]
} # source

physics:
{

  filters:
  {
    fembfilter:           @local::pdsp_fembfilter_all
    missingproductfilter: @local::standard_missingproductfilter
    stopmufilter:   
    {
      module_type: "StoppingMuFilter"
      ProducerLabels :  @local::stoppingmufilterproducerlabels
      CutValues      :  @local::stoppingmufiltercutvalues
      OuterFV        :  @local::outerfv
      TpcFV          :  @local::tpcfv
      InnerFV        :  @local::innerfv
    }
  }

  analyzers:
  {

    tensionanalysis: 
    {
      module_type: "TensionAnalysis"
      ProducerLabels: @local::tensionsanaproducerlabels
      CutValues:      @local::tensionsanacutvalues
      SelectEvents: [ filter ]
    }
  } # analyzers

  stream1: [ out1 ]
  filter: [missingproductfilter, fembfilter, stopmufilter]
  analysis: [ tensionanalysis ]
  trigger_paths: [ filter ]
  end_paths: [ analysis, stream1 ]

} # physics

outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName: "%ifb_%tc_tensionanalysis.root"
    dataTier: "ana"
    compressionLevel: 1
  } # out1
} # outputs

services.message.destinations.infomsg.categories.default.limit: 10000000

