find_ups_product( dunetpc )
list(APPEND TrueLibs ProtoDUNEDataUtils)
list(APPEND AliasLibs PROTODUNEDATAUTILS)

foreach(lib IN ZIP_LISTS TrueLibs AliasLibs)
  if(DEFINED ENV{DUNETPC_FQ_DIR})
    message("DUNETPC_FQ_DIR defined. Using this to search for library ${lib_0}")
    cet_find_library( ${lib_1} NAMES ${lib_0} PATHS ENV DUNETPC_FQ_DIR PATH_SUFFIXES lib NO_DEFAULT_PATH )
  else()
    message("DUNETPC_FQ_DIR undefined. Expect we are building next to dunetpc. Aliasing library ${lib_0} to ${lib_1}")
    set(${lib_1} ${lib_0})
  endif()
endforeach()


#cet_find_library( PROTODUNEDATAUTILS NAMES ProtoDUNEDataUtils PATHS ENV DUNETPC_FQ_DIR PATH_SUFFIXES lib NO_DEFAULT_PATH )

art_make(BASENAME_ONLY
  MODULE_LIBRARIES
  ${ART_FRAMEWORK_CORE}
  ${ART_FRAMEWORK_PRINCIPAL}
  ${ART_FRAMEWORK_SERVICES_REGISTRY}
  ${ART_FRAMEWORK_SERVICES_BASIC}
  ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
  ${ART_ROOT_IO_TFILESERVICE_SERVICE}
  ${ART_PERSISTENCY_COMMON}
  canvas
  art_Persistency_Provenance
  ${ART_UTILITIES}
  ${MF_MESSAGELOGGER}
  cetlib cetlib_except
  larsim_Simulation
  lardataobj_Simulation
  lardataobj_RecoBase
  lardata_Utilities
  larcorealg_Geometry
  nusimdata_SimulationBase
  larsim_MCCheater_PhotonBackTrackerService_service           
  larsim_MCCheater_BackTrackerService_service           
  larsim_MCCheater_ParticleInventoryService_service
  larreco_RecoAlg
  ROOT_BASIC_LIB_LIST
  PROTODUNEDATAUTILS
  ProtoDUNEUtilities
  )

cet_remove_compiler_flags(CXX -pedantic)

install_headers()
install_fhicl()
install_source()
