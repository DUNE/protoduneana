#include "services_dune.fcl"
#include "ProtoDUNEPizeroAnaTree.fcl"
#include "protodune_tools_dune.fcl"

process_name: pdAnaTreeProcess

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "pdAnaTree.root" }
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:                      @local::dune_message_services_prod_debug
  FileCatalogMetadata:          @local::art_file_catalog_mc
				@table::protodune_reco_services
  PdspChannelMapService:        @local::pdspchannelmap
  ChannelStatusService:         @local::pdsp_channel_status
  Geometry:                     @local::protodune_geo
  LArG4Parameters:              @local::protodune_largeantparameters
  IFDH :{}
}
services.message.destinations.LogStandardOut.threshold: "INFO"

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents: -1
  fileNames: ["input_file.root"]
}

physics:
{
 analyzers:
 {
  pdAnaTree:          @local::proto_AnaTree
 }
 ana:  [ pdAnaTree ]

 end_paths:     [ ana ]

}

outputs: {}
# physics.analyzers.pdAnaTree.ShowerCalorimetryTag: "pandoraShowercaloSCE"
# physics.analyzers.pdAnaTree.CalorimetryTag: "pandoracaloSCE"
physics.analyzers.pdAnaTree.UseMCforReco:   true
physics.analyzers.pdAnaTree.SCEFileName:    "./SCE_DataDriven_180kV_v3.root"
physics.analyzers.pdAnaTree.YZCorrFileName: "./YZcalo_sce.root"
physics.analyzers.pdAnaTree.XCorrFileName:  "./Xcalo_sce.root"
physics.analyzers.pdAnaTree.CalibFactor:    0.00486
physics.analyzers.pdAnaTree.NormFactor:     0.9947
